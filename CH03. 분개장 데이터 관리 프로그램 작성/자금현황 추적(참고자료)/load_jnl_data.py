import pandas as pd
from pandas import DataFrame, Series
import numpy as np
import openpyxl as xl
from datetime import date
from cafle.genfunc import showdf
from functools import wraps


def read_jnldata(ws):
    colnames = [x.value.replace('\n', '').replace('/', '') for x in ws[4]]

    collst = []
    for row in ws.iter_rows(min_row=5, max_row=200000, max_col=len(colnames), values_only=True):
        if row[0] == "합 계":
            break
        row = list(row)
        if row[0] is not None:
            일자 = row[0].split('/')
            일자 = date(2022, int(일자[0]), int(일자[1]))
            전표번호 = row[1]
        row[0] = 일자
        row[1] = 전표번호
        row[3] = row[3].replace(" ", "")
        if pd.isna(row[5]):
            row[5] = 0
        if pd.isna(row[6]):
            row[6] = 0
        collst.append(row)
    jnls = DataFrame(collst, columns=colnames)
    return jnls

def load_xlfile(filename):
    #Load excel file
    wb = xl.load_workbook(filename)
    ws = wb.worksheets[0]
    jnls = read_jnldata(ws)
    return jnls

def input_initial_data(df):
    data = [
        [date(2022, 1, 1), '00000', '10100', '현금', '전기이월', 1_191_130, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '10300', '보통예금', '전기이월', 1_108_323_047, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '10500', '정기예금', '전기이월', 12_000_000, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '10800', '외상매출금', '전기이월', 73_651_979, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '12000', '미수금', '전기이월', 121_002_334, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '13100', '선급금', '전기이월', 42_136_649, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '13300', '선급비용', '전기이월', 71_469_042, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '13400', '가지급금', '전기이월', 0, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '13500', '부가세대급금', '전기이월', 0, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '14600', '상품', '전기이월', 17_166_500, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '18200', '지분법적용투자주식', '전기이월', 1_380_592_487, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '21200', '비품', '전기이월', 354_020_131, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '21300', '감가상각누계액', '전기이월', 0, 117_792_973, '대변', None, None],
        [date(2022, 1, 1), '00000', '21400', '건설중인자산', '전기이월', 0, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '21800', '시설장치', '전기이월', 180_070_000, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '21900', '감가상각누계액', '전기이월', 0, 98_066_305, '대변', None, None],
        [date(2022, 1, 1), '00000', '23300', '상표권', '전기이월', 1_512_722, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '25100', '외상매입금', '전기이월', 0, 74_096_419, '대변', None, None],
        [date(2022, 1, 1), '00000', '25300', '미지급금', '전기이월', 0, 175_140_069, '대변', None, None],
        [date(2022, 1, 1), '00000', '25400', '예수금', '전기이월', 0, 66_304_910, '대변', None, None],
        [date(2022, 1, 1), '00000', '25500', '부가세예수금', '전기이월', 0, 0, '대변', None, None],
        [date(2022, 1, 1), '00000', '26000', '단기차입금', '전기이월', 0, 480_000_000, '대변', None, None],
        [date(2022, 1, 1), '00000', '26200', '미지급비용', '전기이월', 0, 685_160_883, '대변', None, None],
        [date(2022, 1, 1), '00000', '26300', '선수수익', '전기이월', 0, 969_526_083, '대변', None, None],
        [date(2022, 1, 1), '00000', '27500', '환불충당부채', '전기이월', 0, 117_397_651, '대변', None, None],
        [date(2022, 1, 1), '00000', '29500', '퇴직급여충당부채', '전기이월', 0, 522_439_667, '대변', None, None],
        [date(2022, 1, 1), '00000', '30400', '관계회사장기차입금', '전기이월', 0, 0, '대변', None, None],
        [date(2022, 1, 1), '00000', '33100', '자본금', '전기이월', 0, 322_182_000, '대변', None, None],
        [date(2022, 1, 1), '00000', '33200', '우선주자본금', '전기이월', 0, 302_609_000, '대변', None, None],
        [date(2022, 1, 1), '00000', '34100', '주식발행초과금', '전기이월', 0, 13_373_608_471, '대변', None, None],
        [date(2022, 1, 1), '00000', '37600', '이월결손금', '전기이월', 13_666_747_760, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '96200', '임차보증금', '전기이월', 251_013_600, 0, '차변', None, None],
        [date(2022, 1, 1), '00000', '96400', '기타보증금', '전기이월', 20_300_000, 0, '차변', None, None],
    ]
    df_tmp = DataFrame(data, columns=df.columns)
    df = pd.concat([df_tmp, df], ignore_index=True)
    return df

def reorganize_account_name(df):
    # 계정분류표
    arr = [
        ['현금', '유동자산', '현금및현금성자산', '현금'],
        ['보통예금', '유동자산', '현금및현금성자산', '보통예금'],
        ['정기예금', '유동자산', '정기예금', '정기예금'],
        ['외상매출금', '유동자산', '매출채권및기타채권', '외상매출금'],
        ['미수금', '유동자산', '매출채권및기타채권', '미수금'],
        ['선급금', '유동자산', '기타유동자산', '선급금'],
        ['선급비용', '유동자산', '기타유동자산', '선급비용'],
        ['가지급금', '유동자산', '기타유동자산', '가지급금'],
        ['부가세대급금', '유동자산', '기타유동자산', '선납세금'],
        ['선납세금', '유동자산', '기타유동자산', '선납세금'],
        ['상품', '유동자산', '재고자산', '재고자산'],
        ['지분법적용투자주식', '비유동자산', '투자자산', '지분법적용투자주식'],
        ['비품', '비유동자산', '유형자산', '비품'],
        ['감가상각누계액', '비유동자산', '유형자산', '감가상각누계액'],
        ['건설중인자산', '비유동자산', '유형자산', '건설중인자산'],
        ['시설장치', '비유동자산', '유형자산', '시설장치'],
        ['감가상각누계액', '비유동자산', '유형자산', '감가상각누계액'],
        ['상표권', '비유동자산', '무형자산', '산업재산권'],
        ['외상매입금', '유동부채', '매입채무및기타채무', '외상매입금'],
        ['미지급금', '유동부채', '매입채무및기타채무', '미지급금'],
        ['예수금', '유동부채', '기타유동부채', '예수금'],
        ['부가세예수금', '유동부채', '기타유동부채', '부가세예수금'],
        ['단기차입금', '유동부채', '단기차입금', '단기차입금'],
        ['미지급비용', '유동부채', '매입채무및기타채무', '미지급비용'],
        ['선수수익', '유동부채', '선수수익', '선수수익'],
        ['환불충당부채', '유동부채', '환불충당부채', '환불충당부채'],
        ['퇴직급여충당부채', '비유동부채', '퇴직급여충당부채', '퇴직급여충당부채'],
        ['관계회사장기차입금', '비유동부채', '주임종차입금', '주임종차입금'],
        ['자본금', '자본', '자본금', '자본금'],
        ['우선주자본금', '자본', '자본금', '우선주자본금'],
        ['주식발행초과금', '자본', '자본잉여금', '주식발행초과금'],
        ['이월결손금', '자본', '결손금', '이월결손금'],
        ['B2C매출', '매출', '매출', 'B2C매출'],
        ['상품매출', '매출', '매출', 'B2C매출'],
        ['B2B매출', '매출', '매출', 'B2B매출'],
        ['교재매출', '매출', '매출', '교재매출'],
        ['상품매출원가', '매출원가', '매출원가', '상품매출원가'],
        ['직원급여(판)', '판매비와관리비', '인건비', '급여'],
        ['퇴직급여(판)', '판매비와관리비', '인건비', '퇴직급여'],
        ['복리후생비(판)', '판매비와관리비', '인건비', '복리후생비'],
        ['복리후생비/식대(판)', '판매비와관리비', '인건비', '복리후생비'],
        ['복리후생비/야근식대(판)', '판매비와관리비', '인건비', '복리후생비'],
        ['복리후생비/회식비(판)', '판매비와관리비', '인건비', '복리후생비'],
        ['복리후생비/회의비(판)', '판매비와관리비', '인건비', '복리후생비'],
        ['복리후생비/커피,스낵포(판)', '판매비와관리비', '인건비', '복리후생비'],
        ['복리후생비/회식비(판)', '판매비와관리비', '인건비', '복리후생비'],
        ['여비교통비(판)', '판매비와관리비', '기타판관비', '여비교통비'],
        ['여비교통비/야근(판)', '판매비와관리비', '기타판관비', '여비교통비'],
        ['접대비(판)', '판매비와관리비', '기타판관비', '기타'],
        ['통신비(판)', '판매비와관리비', '기타판관비', '기타'],
        ['수도광열비(판)', '판매비와관리비', '기타판관비', '수도광열비'],
        ['세금과공과금(판)', '판매비와관리비', '기타판관비', '세금과공과'],
        ['감가상각비(판)', '판매비와관리비', '기타판관비', '감가상각비'],
        ['지급임차료(판)', '판매비와관리비', '기타판관비', '지급임차료'],
        ['보험료(판)', '판매비와관리비', '기타판관비', '기타'],
        ['경상연구개발비(판)', '판매비와관리비', '기타판관비', '경상연구개발비'],
        ['운반비(판)', '판매비와관리비', '기타판관비', '기타'],
        ['교육훈련비(판)', '판매비와관리비', '기타판관비', '기타'],
        ['도서인쇄비(판)', '판매비와관리비', '기타판관비', '도서인쇄비'],
        ['교재제작비(판)', '판매비와관리비', '기타판관비', '도서인쇄비'],
        ['시험지제작비(판)', '판매비와관리비', '기타판관비', '도서인쇄비'],
        ['소모품비(판)', '판매비와관리비', '기타판관비', '소모품비'],
        ['지급수수료(판)', '판매비와관리비', '기타판관비', '지급수수료'],
        ['사업소득_강사(판)', '판매비와관리비', '기타판관비', '지급수수료'],
        ['사업소득_Part(판)', '판매비와관리비', '기타판관비', '지급수수료'],
        ['금융수수료(판)', '판매비와관리비', '기타판관비', '지급수수료'],
        ['판매수수료(KCP,토스)(판)', '판매비와관리비', '기타판관비', '지급수수료'],
        ['Recruiting(판)', '판매비와관리비', '기타판관비', '지급수수료'],
        ['시스템컨설팅(판)', '판매비와관리비', '기타판관비', '지급수수료'],
        ['광고선전비(판)', '판매비와관리비', '광고선전비', '광고선전비'],
        ['사업소득_Influencer(판)', '판매비와관리비', '광고선전비', '광고선전비'],
        ['기프트콘판촉물(판)', '판매비와관리비', '광고선전비', '광고선전비'],
        ['설명회_바우처(판)', '판매비와관리비', '광고선전비', '광고선전비'],
        ['광고모델료(판)', '판매비와관리비', '광고선전비', '광고선전비'],
        ['무형고정자산상각(판)', '판매비와관리비', '기타판관비', '기타'],
        ['잡비(판)', '판매비와관리비', '기타판관비', '기타'],
        ['이자수익', '영업외수익', '영업외수익', '이자수익'],
        ['잡이익', '영업외수익', '영업외수익', '잡이익'],
        ['역량지원금', '영업외수익', '영업외수익', '역량지원금'],
        ['이자비용', '영업외비용', '영업외비용', '이자비용'],
        ['유형자산손상차손', '영업외비용', '영업외비용', '유형자산손상차손'],
        ['잡손실', '영업외비용', '영업외비용', '잡손실'],
        ['임차보증금', '비유동자산', '보증금', '임차보증금'],
        ['기타보증금', '비유동자산', '보증금', '기타보증금'],
    ]
    df['년'] = df.일자.map(lambda x: x.year)
    df['월'] = df.일자.map(lambda x: x.month)
    df['일'] = df.일자.map(lambda x: x.day)
    df['대분류'] = [None] * len(df)
    df['중분류'] = [None] * len(df)
    df['소분류'] = [None] * len(df)

    table = DataFrame(arr, columns=['구분', '대분류', '중분류', '소분류'])
    table.set_index('구분', inplace=True)

    for key, data in table.iterrows():
        df_key = df[df['계정과목'] == key]
        df.loc[df_key.index, '대분류'] = data['대분류']
        df.loc[df_key.index, '중분류'] = data['중분류']
        df.loc[df_key.index, '소분류'] = data['소분류']

    return df

class Jnls:
    def __init__(self, filename):
        if type(filename) is DataFrame:
            self.df = filename
            self._set_outputfunc()
        else:
            self.filename = filename
            self.df_row = load_xlfile(self.filename)
            df = input_initial_data(self.df_row)
            self.df = reorganize_account_name(df)
            self._set_outputfunc()

    #Decorator
    class attrsort:
        def __call__(self, cls):
            def init(self, spristnc):
                self.spristnc = spristnc
                self.attrname = cls.__name__
            cls.__init__ = init

            def call(self, lookingval):
                df = self.spristnc.df
                if type(lookingval) is list:
                    return Jnls(df[df[self.attrname].isin(lookingval)])
                else:
                    return Jnls(df[df[self.attrname] == lookingval])
            cls.__call__ = call
            return cls

    @attrsort()
    class 일자:
        pass
    @attrsort()
    class 전표번호:
        pass
    @attrsort()
    class 계정코드:
        pass
    @attrsort()
    class 계정과목:
        pass
    @attrsort()
    class 적요:
        pass
    @attrsort()
    class 차변:
        pass
    @attrsort()
    class 대변:
        pass
    @attrsort()
    class 구분:
        pass
    @attrsort()
    class 거래처명:
        pass
    @attrsort()
    class 유형:
        pass
    @attrsort()
    class 년:
        pass
    @attrsort()
    class 월:
        pass
    @attrsort()
    class 일:
        pass
    @attrsort()
    class 대분류:
        pass
    @attrsort()
    class 중분류:
        pass
    @attrsort()
    class 소분류:
        pass

    def _set_outputfunc(self):
        self.일자 = self.일자(self)
        self.전표번호 = self.전표번호(self)
        self.계정코드 = self.계정코드(self)
        self.계정과목 = self.계정과목(self)
        self.적요 = self.적요(self)
        self.차변 = self.차변(self)
        self.대변 = self.대변(self)
        self.구분 = self.구분(self)
        self.거래처명 = self.거래처명(self)
        self.유형 = self.유형(self)
        self.년 = self.년(self)
        self.월 = self.월(self)
        self.일 = self.일(self)
        self.대분류 = self.대분류(self)
        self.중분류 = self.중분류(self)
        self.소분류 = self.소분류(self)
